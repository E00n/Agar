#!/usr/bin/env ruby -w
# encoding: UTF-8
#用于接收能量与信息, 能够与场进行连接
module F接收
  扩展 S混入强化
  
  包含时执行 do
    unless (定义了常量?(:C不动代理对象) && (self < C不动代理对象))#依赖区域相关方法
      引发异常('包含特性异常',"F接收只能被C不动代理对象的子类包含") 
    end
    
    初始化执行 do
      @连接场数组 = []
      @收到信能数组 = []
    end
  end
  
  def 接收(信能);@收到信能数组 << 信能 end
  def 刷新连接场#范围变动后调用
    相交场数组 = @所在区域.每个相交场(范围).数组化
    (相交场数组 - @连接场数组).每个{|场| 添加连接场(场); 场.添加连接对象(self)}
    (@连接场数组 - 相交场数组).每个{|场| 删除连接场(场); 场.删除连接对象(self)}
  end
  def 添加连接场(场);@连接场数组 << 场 end
  def 删除连接场(场);@连接场数组.删除(场) end
end
