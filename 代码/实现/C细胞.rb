#!/usr/bin/env ruby -w
# encoding: UTF-8
需要 'HSV'
需要 'D二维点'
需要 'D圆形'
class C细胞
  包含模块 M代理控制反转
  支持 :移动, :形变, :反馈, :销毁
  可读属性 :名称, :质量, :颜色
  def 初始化(名称 = '', 质量 = 36, 颜色 = nil, 控制器 = C细胞静止控制器.新建)
    @名称, @质量, @颜色, @控制器 = 名称, 质量, 颜色, 控制器
    @颜色 ||= 获取随机颜色
    添加初始事件(C时间轴事件.新建(:循环, 随机(100)))
    添加初始事件(C时间轴事件.新建(:反馈, 10))
  end
  def 坐标;@坐标.复制 end
  def 半径;@质量.开根.向下取整 end
  def 形体;D圆形.新建(半径) end
  def 速度;2.2 * 半径**(-0.439) end#(2200 * 半径**(-0.439)每秒)
  def 获取随机颜色;SCRF::HSV.新建(随机(359),0.97,255).转换为RGB.转换为hex end
  def 质量变化(数值);@质量 += 数值 end
  def 循环
    间隔 = 10
    追加事件(C时间轴事件.新建(:循环, 间隔))
    判断移动(间隔 / 2)
  end
  def 判断移动(间隔)
    移动方向 = @控制器.判断移动方向
    移动(移动方向, 间隔) if 移动方向
  end
  def 移动(移动方向, 移动时间)
    移动距离 = 速度 * 移动时间
    移动向量 = (移动方向 * 移动距离).四舍五入
    追加事件(C时间轴事件.新建(:移动, 移动时间, 移动向量))
  end
  def 反馈;追加事件(C时间轴事件.新建(:反馈, 40)) end
  def 反馈信息;{类型: :圆, 半径: 半径, 颜色: @颜色, 名称: @名称} end
end

描述 C细胞 do
  添加测试 '细胞半径测试' do
    期望(C细胞.新建('', 150).半径).等于 12
  end
end