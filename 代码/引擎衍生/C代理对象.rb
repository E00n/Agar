#!/usr/bin/env ruby -w
# encoding: UTF-8
class C代理对象
  包含模块 M时间轴事件优先队列
  def 初始化(对象, 时间轴, 所在区域, 坐标)
    @对象 = 对象
    @所在区域, @坐标 = 所在区域, 坐标
    挂载时间轴(时间轴)
    @对象.初始事件.每个{|事件| 添加事件(事件)}
    @所在区域.添加元素(self) if @坐标
    @是否销毁 = false
  end
  def 执行当前事件
    执行事件(获得当前事件)
    return if 已被销毁?
    @对象.获取追加事件.每个{|事件| 添加事件(事件)}
    没有事件? ? 脱离时间轴 : 下滤
  end
  def 执行事件(事件)
    if @对象.支持?(事件.名称)
      引发异常('代理对象异常',"不支持外部事件: #{事件.名称}") unless 响应?(事件.名称)
      调用(事件.名称, *事件.内容)
    elsif @对象.响应?(事件.名称)
      @对象.调用(事件.名称, *事件.内容)
    else
      引发异常('代理对象异常',"事件#{事件.名称}未找到可执行者")
    end
  end
  def 已被销毁?;@是否销毁 end
  def 销毁#外部事件
    return if @是否销毁
    脱离时间轴
    @所在区域.删除元素(self)
    @是否销毁 = true
  end
  def 范围;@范围 ||= 计算范围 end
  def 计算范围(坐标 = @坐标);@对象.形体.转换为区域(坐标) end
  def 形变#外部事件
    计算范围
    @所在区域.刷新元素(self)
  end
  def 移动(向量)#外部事件
    坐标 = @坐标.位移(向量)
    范围 = @对象.形体.转换为区域(坐标)
    return false unless @所在区域.包围?(范围)
    @坐标, @范围 = 坐标, 范围
    @所在区域.刷新元素(self)
  end
  def 字符串;@对象.名称 end
end
