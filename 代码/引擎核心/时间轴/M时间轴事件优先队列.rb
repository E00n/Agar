#!/usr/bin/env ruby -w
# encoding: UTF-8
需要 'D优先队列'
module M时间轴事件优先队列
  def 挂载时间轴(时间轴)
    @时间轴 = 时间轴
    @事件优先队列 = D优先队列.新建(:发生时间)
  end
  def 没有事件?;@事件优先队列.为空? end
  def 最早事件时间;@事件优先队列.最高优先级元素.时间 end
  def 添加事件(事件)
    引发异常('时间轴事件优先队列异常','时间轴未挂载') unless @时间轴
    引发异常('时间轴事件优先队列异常','添加事件时间小于时间轴时间') if 事件.时间 < @时间轴.当前时间
    @事件优先队列.添加元素(事件)
    @事件优先队列.当前大小 > 1 ? @时间轴.刷新对象(self) : @时间轴.添加对象(self)
  end
  def 获得当前事件;@事件优先队列.取出最高优先级元素 end
end
